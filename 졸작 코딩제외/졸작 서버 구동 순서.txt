졸작 서버 구동 순서

ssh -i /c/Users/82107/Desktop/myAWS/carbon.pem ec2-user@13.209.66.114

yes

<foreground로 서버실행>

source venv/bin/activate
gunicorn -w 1 -b 0.0.0.0:5000 app:app
서버
cd ~/carbon_api
http://13.209.66.114:5000/status

****gunicorn 프로세스 확인
>> ps aux | grep gunicorn

gunicorn 죽이기 
>> pkill gunicorn

import os
import json
from flask import Flask, request, jsonify
from datetime import datetime

app = Flask(__name__)


<git-Bash python flask app.py코드>

@app.route('/receive-data', methods=['POST'])
def receive_data():
    data = request.get_json()

    # 로그 출력
    print("받은 데이터:", data)

    # 저장할 경로
    log_path = "carbon_log.json"

    # 타임스탬프 추가
    data["timestamp"] = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

@app.rooite('/home',methods=['

<Agent 코드>

import requests
import time
import random

# 매번 갱신되는 EC2 ip로 바꿀것
SERVER_URL = "<http://13.209.8.163:5000>/receive-data"

def send_data():
    data = {
        "cluster": "agent-1",
        "carbon": round(random.uniform(10.0, 25.0), 2)  # 탄소값 랜덤 시뮬레이션
    }
    try:
        response = requests.post(SERVER_URL, json=data)
        print(f"[전송 성공] {data} → 응답: {response.status_code}")
    except Exception as e:
        print(f"[에러 발생] {e}")

if __name__ == "__main__":
    while True:
        send_data()
        time.sleep(5)  # 5초 간격 전송